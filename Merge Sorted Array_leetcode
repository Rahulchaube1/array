class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        // Pointers:
        // p1: points to last element of nums1's actual values
        // p2: points to last element of nums2
        // p: points to last position in nums1 where we'll place our merged value
        int p1 = m - 1;  // last element in nums1
        int p2 = n - 1;  // last element in nums2
        int p = m + n - 1;  // last position in merged array
        
        // While there are elements to compare in both arrays
        while(p2 >= 0 && p1 >= 0) {
            if(nums1[p1] > nums2[p2]) {
                nums1[p] = nums1[p1];
                p1--;
            } else {
                nums1[p] = nums2[p2];
                p2--;
            }
            p--;
        }
        
        // If there are remaining elements in nums2
        // (no need to handle remaining nums1 elements as they're already in place)
        while(p2 >= 0) {
            nums1[p] = nums2[p2];
            p2--;
            p--;
        }
    }
};
